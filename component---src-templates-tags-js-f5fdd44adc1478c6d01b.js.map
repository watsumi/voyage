{"version":3,"file":"component---src-templates-tags-js-f5fdd44adc1478c6d01b.js","mappings":"wJA0CA,UAnCa,IAAsC,IAAD,MAApC,KAAEA,EAAI,YAAEC,EAAW,SAAEC,GAAU,EAC3C,MAAMC,GAAkC,QAAtB,EAAAH,EAAKI,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,SACzC,WAAEC,GAAeP,EAAKQ,kBACtBC,EAAQT,EAAKQ,kBAAkBE,OAC/B,IAAEC,GAAQV,EAEhB,GAAqB,IAAjBQ,EAAMG,OACR,OACE,gBAAC,IAAM,CAACV,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAK,QAAUK,EAAG,YACvB,yBAAG,uBAKT,MAAME,EAAS,QAAWF,EAAG,MAAMJ,EAAU,MAC7C,OACE,gBAAC,IAAM,CAACL,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAOO,IACZ,0BAAKA,GACL,sBAAIC,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAIC,IAAS,IAAD,EACjB,MAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,MAAQ,GAChCC,EAAsC,QAA7B,EAAGL,EAAKC,YAAYI,iBAAS,aAA1B,EAA4BC,gBAAgBC,MAE9D,OACE,gBAAC,IAAO,CAACP,KAAMA,EAAMX,MAAOA,EAAOe,KAAMA,EAAMC,UAAWA,GAAa,KAItE,C","sources":["webpack://voyage/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Article from \"../components/article\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Tags = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { totalCount } = data.allMarkdownRemark\n  const posts = data.allMarkdownRemark.nodes\n  const { tag } = pageContext\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title={`タグ: \"${tag}\" (0記事)`} />\n        <p>該当するタグの投稿記事がありません。</p>\n      </Layout>\n    )\n  }\n\n  const tagHeader = `タグ: \"${tag}\" (${totalCount}記事)`\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={tagHeader} />\n      <h1>{tagHeader}</h1>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const tags = post.frontmatter.tags || []\n          const thumbnail = post.frontmatter.thumbnail?.childImageSharp.fluid;\n\n          return (\n            <Article post={post} title={title} tags={tags} thumbnail={thumbnail} />\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tags\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 1280) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"names":["data","pageContext","location","siteTitle","site","siteMetadata","title","totalCount","allMarkdownRemark","posts","nodes","tag","length","tagHeader","style","listStyle","map","post","frontmatter","fields","slug","tags","thumbnail","childImageSharp","fluid"],"sourceRoot":""}